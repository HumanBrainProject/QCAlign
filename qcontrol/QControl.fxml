<?xml version="1.0" encoding="UTF-8"?>

<?import java.lang.*?>
<?import javafx.collections.*?>
<?import javafx.scene.Group?>
<?import javafx.scene.canvas.Canvas?>
<?import javafx.scene.control.*?>
<?import javafx.scene.layout.*?>

<VBox fx:id="vbox" minHeight="600.0" minWidth="1024.0" onKeyPressed="#keyPressed" xmlns="http://javafx.com/javafx/11.0.1" xmlns:fx="http://javafx.com/fxml/1" fx:controller="qcontrol.QCController">
   <children>
      <MenuBar>
        <menus>
          <Menu text="File">
            <items>
              <MenuItem onAction="#open" text="Open" />
              <!--<MenuItem onAction="#save" text="Save" />-->
              <MenuItem onAction="#saveas" text="Save As..." />
              <MenuItem onAction="#close" text="Close" disable="true"/>
              <SeparatorMenuItem />
              <MenuItem onAction="#importhier" text="Import hierarchy"/>
              <MenuItem onAction="#exportstats" text="Export statistics"/>
              <MenuItem onAction="#exportsheet" text="Export hierarchy sheet"/>
              <SeparatorMenuItem />
              <MenuItem onAction="#exit" text="Exit" />
            </items>
          </Menu>
          <Menu text="View">
            <items>
              <MenuItem onAction="#expandHier" text="Expand hierarchy"/>
              <RadioMenuItem fx:id="lockHier" onAction="#lockHier" text="Lock hierarchy" />
              <RadioMenuItem fx:id="overview" onAction="#overview" text="Overview (Space)" />
            </items>
          </Menu>
          <Menu text="Series">
            <items>
              <MenuItem onAction="#prefillSeriesKeepDamage" text="Prefill grid, except damage markers" />
              <MenuItem onAction="#clearSeriesKeepDamage" text="Clear grid, except damage markers" />
              <MenuItem onAction="#resetSeries" text="Reset everything" />
            </items>
          </Menu>
          <Menu text="Section">
            <items>
              <MenuItem onAction="#prefillSectionKeepDamage" text="Prefill grid, except damage markers" />
              <MenuItem onAction="#clearSectionKeepDamage" text="Clear grid, except damage markers" />
              <MenuItem onAction="#resetSection" text="Reset everything" />
            </items>
          </Menu>
          <Menu text="Help">
            <items>
              <MenuItem onAction="#minidoc" text="Quick reference" />
              <MenuItem onAction="#about" text="About" />
            </items>
          </Menu>
        </menus>
      </MenuBar>
      <HBox alignment="CENTER_LEFT" VBox.vgrow="NEVER">
         <children>
            <ChoiceBox fx:id="gridType" value="Circles" onAction="#reGrid" >
			   <items>
			      <FXCollections fx:factory="observableArrayList">
			         <String fx:value="Circles" />
			         <String fx:value="Dots" />
			         <String fx:value="Grid" />
			      </FXCollections>
			   </items>
            </ChoiceBox>
            <ColorPicker fx:id="gridColor" onAction="#reGrid" />
            <Slider fx:id="gridAlpha" value="100.0" prefWidth="100.0"/>
            <ToggleButton fx:id="setup" text="Setup mode"/>
            <HBox alignment="CENTER_LEFT" VBox.vgrow="NEVER" visible="${setup.selected}" managed="${setup.selected}">
               <children>
<Label text=" Grid spacing:"/>
<Spinner fx:id="voxSpn" prefWidth="60.0" editable="true" onValueChange="#gridSpacing">
    <valueFactory>
        <SpinnerValueFactory.IntegerSpinnerValueFactory fx:id="voxSpnVal" min="5" max="1000" initialValue="20"/>
    </valueFactory>
</Spinner><Label text="[voxels]"/>
               </children>
            </HBox>
            <HBox alignment="CENTER_LEFT" VBox.vgrow="NEVER" visible="${!setup.selected}" managed="${!setup.selected}">
            <Label text=" Overlay: Opacity: " />
            <Slider fx:id="opacitySlider" value="50.0" prefWidth="100.0"/>
            <HBox alignment="CENTER_LEFT" VBox.vgrow="NEVER" disable="${opacitySlider.value!=100.0}">
               <children>
                  <Label text=" Outline: " />
                  <ColorPicker fx:id="outColor" onAction="#reOvly" />
               </children>
            </HBox>
            <Label fx:id="prg" />
            </HBox>
            
            <Region HBox.hgrow="ALWAYS" />
            <Button onAction="#goFirst" text="|&lt;&lt;" />
            <Button onAction="#less10" text="&lt; 10 &lt;" />
            <Button onAction="#less" text="&lt;" />
            <Spinner fx:id="spn" prefWidth="40.0">
                <valueFactory>
                    <SpinnerValueFactory.IntegerSpinnerValueFactory fx:id="spnVal" max="1" min="1" />
                </valueFactory>
            </Spinner>
            <Button onAction="#more" text="&gt;" />
            <Button onAction="#more10" text="&gt; 10 &gt;" />
            <Button onAction="#goLast" text="&gt;&gt;|" />
            <Label text=" of " /><Label text="${spnVal.max}" /><Label text=" " />
         </children>
      </HBox>
      <SplitPane dividerPositions="0.2" VBox.vgrow="ALWAYS">
      <items>
      <TreeView fx:id="tree" showRoot="false" />
      <Pane fx:id="pane" onMouseDragged="#mouseDragged" onMouseMoved="#mouseMoved" onMousePressed="#mousePressed">
         <children>
            <Canvas fx:id="imgcnv" height="${pane.height}" width="${pane.width}" />
            <Canvas fx:id="ovlycnv" height="${pane.height}" width="${pane.width}" />
            <Canvas fx:id="gridcnv" height="${pane.height}" width="${pane.width}" />
            <Canvas fx:id="lblcnv" height="${pane.height}" width="${pane.width}" />
         </children>
      </Pane>
      </items>
      </SplitPane>
   </children>
</VBox>
